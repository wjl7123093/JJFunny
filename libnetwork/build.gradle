apply plugin: 'com.android.library'

android {
    compileSdkVersion this.rootProject.android.compileSdkVersion


    defaultConfig {
        minSdkVersion this.rootProject.android.minSdkVersion
        targetSdkVersion this.rootProject.android.targetSdkVersion
        versionCode this.rootProject.android.versionCode
        versionName this.rootProject.android.versionName

        consumerProguardFiles 'consumer-rules.pro'

        // exportSchema = true
        javaCompileOptions{
            annotationProcessorOptions{
                arguments=["room.schemaLocation":"$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // okhttp3（因为 libcommon 中已经有依赖引用了 okhttp3（用的是 api 引用的，所以这里会监测到）
    // 所以这里就两个 okhttp3 冲突，注释掉一个
    implementation this.rootProject.depsLibs.okhttp3
    implementation this.rootProject.depsLibs.okhttp3_logging
    // room
    implementation this.rootProject.depsLibs.room
    // room & liveData
    implementation this.rootProject.depsLibs.room_lifecycle
    annotationProcessor this.rootProject.depsLibs.room_compiler
    annotationProcessor this.rootProject.depsLibs.room_lifecycle_compiler

    // compileOnly 只参与编译不参与打包
    implementation project(':libcommon')

}
