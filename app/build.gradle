apply plugin: 'com.android.application'

android {
    compileSdkVersion this.rootProject.android.compileSdkVersion
    buildToolsVersion this.rootProject.android.buildToolsVersion
    // 添加 buildToolsVersion 声明，避免 lambda 报以下错。
    // 如果 application 中不声明 buildToolsVersion，则会报以下错误（有时候才出现）：
//    错误: 找不到符号
//    符号:   方法 metafactory(Lookup,String,MethodType,MethodType,MethodHandle,MethodType)
//    位置: 接口 LambdaMetafactory

    defaultConfig {
        applicationId this.rootProject.android.applicationId
        minSdkVersion this.rootProject.android.minSdkVersion
        targetSdkVersion this.rootProject.android.targetSdkVersion
        versionCode this.rootProject.android.versionCode
        versionName this.rootProject.android.versionName
        multiDexEnabled this.rootProject.android.multiDexEnabled
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(":libnavannotation")
    annotationProcessor project(":libnavcompiler")
    implementation project(":libnetwork")
    implementation project(":libcommon")

    //QQ快捷登录
    implementation files('libs/open_sdk_r6140_lite.jar')

    //错误收集
    implementation this.rootProject.depsLibs.bugly
    implementation this.rootProject.depsLibs.bugly_native
}
